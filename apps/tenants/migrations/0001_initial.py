# Generated by Django 5.0.1 on 2024-12-29 09:13

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0002_unitmaintenance_unitutility_remove_unit_area_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('alternative_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('id_type', models.CharField(choices=[('nida', 'National ID'), ('voter', 'Voter ID'), ('passport', 'Passport'), ('driving_license', 'Driving License')], max_length=20)),
                ('id_number', models.CharField(max_length=50)),
                ('id_image', models.ImageField(blank=True, null=True, upload_to='tenant_ids/')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='tenant_profiles/')),
                ('emergency_contact_name', models.CharField(max_length=255)),
                ('emergency_contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('employer_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('former', 'Former'), ('blacklisted', 'Blacklisted')], default='pending', max_length=20)),
                ('language', models.CharField(choices=[('en', 'English'), ('sw', 'Swahili')], default='sw', max_length=2)),
                ('preferred_contact_method', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('call', 'Phone Call')], default='sms', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('deactivation_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantOccupancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('key_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('utilities_included', models.JSONField(default=dict, help_text='Dictionary of included utilities and their monthly costs')),
                ('payment_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('biannual', 'Bi-Annual'), ('annual', 'Annual'), ('custom', 'Custom')], max_length=20)),
                ('payment_day', models.PositiveIntegerField(help_text='Day of month when rent is due', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('grace_period_days', models.PositiveIntegerField(default=5, help_text='Number of days after due date before rent is considered late')),
                ('late_fee_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('contract_document', models.FileField(blank=True, null=True, upload_to='tenant_contracts/')),
                ('move_in_checklist', models.JSONField(blank=True, help_text='Move-in inspection checklist', null=True)),
                ('move_out_checklist', models.JSONField(blank=True, help_text='Move-out inspection checklist', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending Move-in'), ('ended', 'Ended'), ('terminated', 'Terminated Early')], default='pending', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('move_out_date', models.DateField(blank=True, null=True)),
                ('move_out_reason', models.TextField(blank=True, null=True)),
                ('deposit_refunded', models.BooleanField(default=False)),
                ('deposit_refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deposit_deduction_reason', models.TextField(blank=True, null=True)),
                ('allowed_occupants', models.PositiveIntegerField(default=1, help_text='Number of people allowed to occupy the unit')),
                ('actual_occupants', models.JSONField(blank=True, help_text='List of people actually occupying the unit', null=True)),
                ('special_conditions', models.TextField(blank=True, help_text='Any special conditions or agreements', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.property')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupancies', to='tenants.tenant')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupancies', to='properties.unit')),
            ],
            options={
                'verbose_name': 'Tenant Occupancy',
                'verbose_name_plural': 'Tenant Occupancies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('complaint', 'Complaint'), ('maintenance', 'Maintenance'), ('payment', 'Payment'), ('violation', 'Violation'), ('warning', 'Warning')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=True, help_text='If True, only property owner can see this note')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='tenants.tenant')),
                ('occupancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenantoccupancy')),
            ],
            options={
                'verbose_name': 'Tenant Note',
                'verbose_name_plural': 'Tenant Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('contract', 'Rental Contract'), ('id', 'Identification'), ('employment', 'Employment Verification'), ('reference', 'Reference Letter'), ('inspection', 'Inspection Report'), ('notice', 'Notice'), ('other', 'Other Documents')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='tenant_documents/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tenants.tenant')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('occupancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenantoccupancy')),
            ],
            options={
                'verbose_name': 'Tenant Document',
                'verbose_name_plural': 'Tenant Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
